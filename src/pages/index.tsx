import { type NextPage } from 'next';
import Head from 'next/head';
import { signIn, signOut, useSession } from 'next-auth/react';

import { DefaultLayout } from '@/components/_scaffold/layouts';
import { ThemeToggle } from '@/components/_scaffold/ui';

import { api } from '@/utils/api';

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: 'from tRPC' });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ThemeToggle />
      <DefaultLayout>
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="font-dec text-5xl font-extrabold tracking-tight text-primary sm:text-[5rem]">
            Create <span className="text-[var(--text-muted)]">T3</span> App
          </h1>
          <div className="flex flex-col items-center gap-2">
            <p className="text-2xl">
              {hello.data ? hello.data.greeting : 'Loading tRPC query...'}
            </p>
            <AuthShowcase />
          </div>

          <div className="flex w-full flex-row items-center justify-center">
            <div className="flex flex-col items-center gap-2">
              <button className="btn bg default p-2 text-sm">default</button>
              <p className="btn bg default muted p-2 text-sm text-foreground-invert">
                muted
              </p>
            </div>
            <div className="flex flex-col items-center gap-2">
              <p className="bg primary btn p-2 text-sm">primary</p>
              <p className="bg primary muted btn p-2 text-sm text-foreground">
                muted
              </p>
            </div>
            <div className="flex flex-col items-center gap-2">
              <p className="btn bg secondary text-sm">secondary</p>
              <p className="btn bg secondary muted text-sm">muted</p>
            </div>
            <div className="flex flex-col items-center gap-2">
              <p className="btn bg accent text-sm">accent</p>
              <p className="btn bg accent muted text-sm">muted</p>
            </div>
            <div className="flex flex-col items-center gap-2">
              <p className="btn bg destructive text-sm">destructive</p>
              <p className="btn bg destructive muted  text-sm">muted</p>
            </div>
            <div className="flex flex-col items-center gap-2">
              <p className="btn bg success text-sm">success</p>
              <p className="btn bg success muted text-sm">muted</p>
            </div>
            <div className="flex flex-col items-center gap-2">
              <p className="btn bg info text-sm">info</p>
              <p className="btn bg info muted text-sm">muted</p>
            </div>
            <div className="flex flex-col items-center gap-2">
              <button className="btn bg warning text-sm">warning</button>
              <p className="btn bg warning muted text-sm">muted</p>
              <button className="btn warning btn-outline text-sm">
                warning
              </button>
              <button className="btn warning btn-ghost text-sm">warning</button>
            </div>
            <div className="flex flex-col items-center gap-2">
              <p className="btn bg alpha p-2 text-sm">alpha</p>
              <p className="btn bg alpha muted p-2 text-sm">muted</p>
            </div>
          </div>
          <div className="flex items-center gap-2 bg-accent p-1">
            <div className="bg default border border-border p-1">arg</div>
            <div className="border border-border bg-primary p-1 text-foreground/70">
              arg
            </div>
            <div className="bg primary border border-border p-1">arg</div>
          </div>
        </div>
      </DefaultLayout>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className={`text-center text-2xl`}>
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-primary px-10 py-3 font-dec font-semibold tracking-widest text-foreground no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? 'Sign out' : 'Sign in'}
      </button>
    </div>
  );
};
