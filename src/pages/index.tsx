import { type NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import { signIn, signOut, useSession } from 'next-auth/react';

import { DefaultLayout } from '@/components/_scaffold/layouts';
import { ThemeToggle } from '@/components/_scaffold/ui';

import { api } from '@/utils/api';

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: 'from tRPC' });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ThemeToggle />
      <DefaultLayout>
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="font-dec text-5xl font-extrabold tracking-tight text-primary sm:text-[5rem]">
            Create <span className="text-secondary">T3</span> App
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-neutral/20 p-4  after:max-w-xs hover:bg-neutral/40"
              href="https://create.t3.gg/en/usage/first-steps"
              target="_blank"
            >
              <h3 className="font-dec text-2xl font-bold tracking-wider">
                First Steps →
              </h3>
              <div className="text-lg">
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </div>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-neutral/20 p-4  after:max-w-xs hover:bg-neutral/40"
              href="https://create.t3.gg/en/introduction"
              target="_blank"
            >
              <h3 className="font-dec text-2xl font-bold tracking-wider">
                Documentation →
              </h3>
              <div className="text-lg">
                Learn more about Create T3 App, the libraries it uses, and how
                to deploy it.
              </div>
            </Link>
          </div>
          <div className="flex flex-col items-center gap-2">
            <p className="text-2xl">
              {hello.data ? hello.data.greeting : 'Loading tRPC query...'}
            </p>
            <AuthShowcase />
          </div>
          {/* <ColorSquares /> */}
          <div className="mx-auto flex w-full justify-center">
            <button className="btn">Click</button>
            <button className="btn primary">Click</button>
            <button className="btn secondary">Click</button>
            <button className="btn btn-outline">Click</button>
            <button className="btn btn-ghost">Click</button>
            <button className="btn btn-square">Click</button>
            <button className="btn btn-round">Click</button>
          </div>
          <div className="h-6 w-6 bg-[rgb(var(--test))]"></div>
        </div>
      </DefaultLayout>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className={`text-center text-2xl`}>
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="text-foreground_ rounded-full bg-primary px-10 py-3 font-dec font-semibold tracking-widest no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? 'Sign out' : 'Sign in'}
      </button>
    </div>
  );
};
